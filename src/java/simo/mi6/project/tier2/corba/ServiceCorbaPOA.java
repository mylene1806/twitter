package corba;


/**
* corba/ServiceCorbaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from twitter.idl
* jeudi 7 juin 2018 16 h 21 CEST
*/

public abstract class ServiceCorbaPOA extends org.omg.PortableServer.Servant
 implements corba.ServiceCorbaOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getUsers", new java.lang.Integer (0));
    _methods.put ("createNewUser", new java.lang.Integer (1));
    _methods.put ("isUserPasswordCorrect", new java.lang.Integer (2));
    _methods.put ("removeUser", new java.lang.Integer (3));
    _methods.put ("getUsersFollowing", new java.lang.Integer (4));
    _methods.put ("getUsersFollowedBy", new java.lang.Integer (5));
    _methods.put ("startFollowing", new java.lang.Integer (6));
    _methods.put ("stopFollowing", new java.lang.Integer (7));
    _methods.put ("createNewTweet", new java.lang.Integer (8));
    _methods.put ("getTweetsOfUser", new java.lang.Integer (9));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // corba/ServiceCorba/getUsers
       {
         String $result[] = null;
         $result = this.getUsers ();
         out = $rh.createReply();
         corba.UsersHelper.write (out, $result);
         break;
       }

       case 1:  // corba/ServiceCorba/createNewUser
       {
         String u = corba.UserHelper.read (in);
         this.createNewUser (u);
         out = $rh.createReply();
         break;
       }

       case 2:  // corba/ServiceCorba/isUserPasswordCorrect
       {
         String u = corba.UserHelper.read (in);
         String $result = null;
         $result = this.isUserPasswordCorrect (u);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // corba/ServiceCorba/removeUser
       {
         String u = corba.UserHelper.read (in);
         this.removeUser (u);
         out = $rh.createReply();
         break;
       }

       case 4:  // corba/ServiceCorba/getUsersFollowing
       {
         String u = corba.UserHelper.read (in);
         String $result[] = null;
         $result = this.getUsersFollowing (u);
         out = $rh.createReply();
         corba.UsersHelper.write (out, $result);
         break;
       }

       case 5:  // corba/ServiceCorba/getUsersFollowedBy
       {
         String u = corba.UserHelper.read (in);
         String $result[] = null;
         $result = this.getUsersFollowedBy (u);
         out = $rh.createReply();
         corba.UsersHelper.write (out, $result);
         break;
       }

       case 6:  // corba/ServiceCorba/startFollowing
       {
         String follower = in.read_string ();
         String followed = in.read_string ();
         this.startFollowing (follower, followed);
         out = $rh.createReply();
         break;
       }

       case 7:  // corba/ServiceCorba/stopFollowing
       {
         String follower = in.read_string ();
         String followed = in.read_string ();
         this.stopFollowing (follower, followed);
         out = $rh.createReply();
         break;
       }

       case 8:  // corba/ServiceCorba/createNewTweet
       {
         String username = in.read_string ();
         String t = corba.TweetHelper.read (in);
         this.createNewTweet (username, t);
         out = $rh.createReply();
         break;
       }

       case 9:  // corba/ServiceCorba/getTweetsOfUser
       {
         String username = in.read_string ();
         String $result[] = null;
         $result = this.getTweetsOfUser (username);
         out = $rh.createReply();
         corba.TweetsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:corba/ServiceCorba:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServiceCorba _this() 
  {
    return ServiceCorbaHelper.narrow(
    super._this_object());
  }

  public ServiceCorba _this(org.omg.CORBA.ORB orb) 
  {
    return ServiceCorbaHelper.narrow(
    super._this_object(orb));
  }


} // class ServiceCorbaPOA
